//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FlotillasEntities : DbContext
    {
        public FlotillasEntities()
            : base("name=FlotillasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bitacora> Bitacora { get; set; }
        public virtual DbSet<Catalogo> Catalogo { get; set; }
        public virtual DbSet<CatalogoDocumento> CatalogoDocumento { get; set; }
        public virtual DbSet<Documento> Documento { get; set; }
        public virtual DbSet<Fase> Fase { get; set; }
        public virtual DbSet<FaseDocumento> FaseDocumento { get; set; }
        public virtual DbSet<FasePerfil> FasePerfil { get; set; }
        public virtual DbSet<Gps> Gps { get; set; }
        public virtual DbSet<Licitacion> Licitacion { get; set; }
        public virtual DbSet<LicitacionUnidad> LicitacionUnidad { get; set; }
        public virtual DbSet<Parametro> Parametro { get; set; }
        public virtual DbSet<PerfilDocumento> PerfilDocumento { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Unidad> Unidad { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> INS_UNIDAD_SP(Nullable<decimal> vin, string idLicitacion, string economicoInt, string accesorios, string domicilioEntrega)
        {
            var vinParameter = vin.HasValue ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(decimal));
    
            var idLicitacionParameter = idLicitacion != null ?
                new ObjectParameter("idLicitacion", idLicitacion) :
                new ObjectParameter("idLicitacion", typeof(string));
    
            var economicoIntParameter = economicoInt != null ?
                new ObjectParameter("economicoInt", economicoInt) :
                new ObjectParameter("economicoInt", typeof(string));
    
            var accesoriosParameter = accesorios != null ?
                new ObjectParameter("accesorios", accesorios) :
                new ObjectParameter("accesorios", typeof(string));
    
            var domicilioEntregaParameter = domicilioEntrega != null ?
                new ObjectParameter("domicilioEntrega", domicilioEntrega) :
                new ObjectParameter("domicilioEntrega", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("INS_UNIDAD_SP", vinParameter, idLicitacionParameter, economicoIntParameter, accesoriosParameter, domicilioEntregaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> INS_USUARIO_PENDIENTE_SP(Nullable<decimal> rol, string nombre, string apellidoPaterno, string apellidoMaterno, string email, string password)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("INS_USUARIO_PENDIENTE_SP", rolParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SEL_BUSQUEDA_FLOTILLA_SP_Result> SEL_BUSQUEDA_FLOTILLA_SP(string factura, Nullable<decimal> vin)
        {
            var facturaParameter = factura != null ?
                new ObjectParameter("factura", factura) :
                new ObjectParameter("factura", typeof(string));
    
            var vinParameter = vin.HasValue ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEL_BUSQUEDA_FLOTILLA_SP_Result>("SEL_BUSQUEDA_FLOTILLA_SP", facturaParameter, vinParameter);
        }
    
        public virtual ObjectResult<SEL_UNIDAD_SP_Result> SEL_UNIDAD_SP(Nullable<decimal> vin)
        {
            var vinParameter = vin.HasValue ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEL_UNIDAD_SP_Result>("SEL_UNIDAD_SP", vinParameter);
        }
    
        public virtual ObjectResult<SEL_VALIDAR_USUARIO_SP_Result> SEL_VALIDAR_USUARIO_SP(string usuario, string password)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEL_VALIDAR_USUARIO_SP_Result>("SEL_VALIDAR_USUARIO_SP", usuarioParameter, passwordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
